{% extends 'components/layout.html.twig' %} {% block content%}
<div class="content-header">
  <div class="container-fluid">
    <h1 class="m-0">Neue Konfiguration</h1>
  </div>
</div>

<section id="edit" class="content mt-5" x-data="configManager()">
  <div class="container-fluid">
    <form id="configForm" action="/config-files/create" method="POST">
      <div class="form-group">
        <label for="name">Name</label>
        <input
          type="text"
          id="name"
          name="name"
          class="form-control"
          required />
      </div>

      <div class="form-group">
        <label for="csvUpload">Upload CSV</label>
        <input
          type="file"
          id="csvUpload"
          name="csvUpload"
          class="form-control"
          @change="handleCsvUpload" />
      </div>

      <div class="form-group mt-4">
        <h3>Felder</h3>
        <template x-for="(field, index) in fields" :key="index">
          <div class="field-group row mb-3">
            <div class="col-3">
              <input
                type="text"
                class="form-control"
                placeholder="Field Name"
                x-model="field.name"
                :name="'fields[' + index + '][name]'" />
            </div>
            <div class="col-2">
              <select
                class="form-select"
                x-model="field.type"
                :name="'fields[' + index + '][type]'">
                <option value="default">Standardwert</option>
                <option value="csv" selected>CSV Feld</option>
              </select>
            </div>
            <div class="col-3">
              <input
                type="text"
                class="form-control"
                x-model="field.csvField"
                :name="'fields[' + index + '][csvField]'"
                placeholder="CSV Feld"
                x-show="field.type === 'csv'"
                :readonly="field.isReadOnly" />
              <input
                type="text"
                class="form-control"
                x-model="field.defaultValue"
                :name="'fields[' + index + '][default]'"
                placeholder="Default Value"
                x-show="field.type === 'default'"
                :readonly="field.isReadOnly" />
            </div>
            <div class="col-2">
              <button
                type="button"
                class="btn btn-danger"
                @click="removeField(index)">
                Remove
              </button>
            </div>
          </div>
        </template>
      </div>

      <div class="form-group">
        <button type="button" class="btn btn-secondary" @click="addField">
          Add New Field
        </button>
      </div>

      <button type="submit" class="btn btn-primary">Speichern</button>
    </form>
  </div>
</section>

<script>
  function configManager() {
    return {
      fields: [],
      handleCsvUpload(event) {
        const file = event.target.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = (e) => {
            const csvContent = e.target.result;
            const rows = csvContent.split("\n");
            const headers = rows[0].split(";").map((header) => header.trim()); // Semicolon as delimiter
            this.fields = headers.map((header) => ({
              name: header,
              type: "csv",
              csvField: header,
              isReadOnly: true,
            }));
          };
          reader.readAsText(file);
        }
      },
      addField() {
        this.fields.push({
          name: "",
          type: "default",
          csvField: "",
          isReadOnly: false,
        });
      },
      removeField(index) {
        this.fields.splice(index, 1);
      },
    };
  }
</script>
{% endblock %}
