{% extends 'components/layout.html.twig' %}

{% block content %}
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Konfiguration Liste</h1>
                </div>
            </div>
            {% if session.error %}
                <div class="alert alert-danger mt-5">
                    {{ session.error }}
                </div>
            {% endif %}
        </div>
    </div>

    <section id="edit" class="content mt-5" x-data="configManager({{ fields }})">
        <div class="container-fluid">
            <form action="/config-files/edit/{{ configFile.getId() }}" method="POST">
                <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" name="name" class="form-control" value="{{ configFile.getName() }}" required>
                </div>

                <div class="form-group">
                    <label for="name">Marge</label>
                    <input type="number" id="marge" name="marge" class="form-control" value="{{ configFile.getMarge() }}" required>
                </div>

                <div class="form-group">
                    <label for="name">SKU Prefix</label>
                    <input type="text" id="prefix" name="prefix" class="form-control" value="{{ configFile.getPrefix() }}" placeholder="preorder-">
                </div>

                <div class="form-group mt-4">
                    <h3>Felder</h3>
                     <template x-for="(field, key) in fields" :key="key">
                        <div class="field-group row mb-3">
                            <label class="col-2" x-text="key"></label>
                            <div class="col-2">
                                <select class="form-select" x-model="field.type" :name="'type[' + key + ']'">
                                    <option value="default" selected>Standardwert</option>
                                    <option value="csv">CSV Feld</option>
                                </select>
                            </div>
                            <div class="col-2">
                                <input 
                                type="text" 
                                :name="'default[' + key + ']'" 
                                class="form-control" 
                                placeholder="Standardwert" 
                                x-show="field.type === 'default'" 
                                x-bind:value="field.default">
                                
                               <input 
                                type="text" 
                                :name="'csv[' + key + ']'" 
                                class="form-control" 
                                placeholder="CSV-Feld" 
                                x-show="field.type === 'csv'" 
                                x-bind:value="field.csv">
                            </div>
                        </div>
                    </template>
                </div>

                <div class="form-group">
                    <label for="mapping">Mapping</label>
                    <textarea id="mapping" name="mapping" class="form-control" rows="10">{{ configFile.getMapping() }}</textarea>
                </div>

                <button type="submit" class="btn btn-primary">Speichern</button>
                <a href="/config-files" class="btn btn-secondary">Abbrechen</a>
            </form>
        </div>
    </section>
    <script>
        function configManager(initialFields) {
            return {
                fields: initialFields,
                init() {
                    console.log('DEMO');
                    console.log(fields);
                }
            };
        }
        {# function configManager() {
            return {
                fields: [],
                selectedFields: {},
                init() {
                    fetch('/config-files/fields')
                        .then(response => response.json())
                        .then(data => {
                            this.fields = data;

                            data.forEach(field => {
                                this.selectedFields[field] = 'default';
                            });
                        })
                        .catch(() => {
                            alert('Fehler beim Laden der Felder.');
                        });
                }
            };
        } #}
    </script>
{% endblock %}
