{% extends 'components/layout.html.twig' %} {% block content %}
<div class="content-header">
  <div class="container-fluid">
    <div class="row mb-2">
      <div class="col-sm-6">
        <h1 class="m-0">Datei bearbeiten</h1>
      </div>
    </div>
    {% if session.error %}
    <div class="alert alert-danger mt-5">
      {{ session.error }}
    </div>
    {% endif %}
  </div>
</div>

<section
  id="edit"
  class="content mt-5">
  <div class="container-fluid">
    <form action="/files/edit/{{ file.getId() }}" method="POST">
      <div class="form-group">
        <label for="filename">Filename</label>
        <input
          type="text"
          id="filename"
          name="filename"
          class="form-control"
          value="{{ file.getFilename() }}"
          readonly />
      </div>

      <div class="form-group">
        <label for="path">Path</label>
        <input
          type="text"
          id="path"
          name="path"
          class="form-control"
          value="{{ file.getPath() }}"
          readonly />
      </div>

      <div class="form-group">
        <label for="marge">Marge</label>
        <input
          type="number"
          id="marge"
          name="marge"
          class="form-control"
          value="{{ file.getMarge() }}"
          required />
      </div>

      <div class="form-group">
        <label for="prefix">SKU Prefix</label>
        <input
          type="text"
          id="prefix"
          name="prefix"
          class="form-control"
          value="{{ file.getPrefix() }}"
          placeholder="preorder-" />
      </div>

      <div x-data="configSelect()" class="form-group">
        <label for="config">Config</label>
        <select name="config" id="config" class="form-select" x-model="selectedConfig">
          <template x-for="config in configs" :key="config.id">
            <option
              :value="config.id"
              x-text="config.name"
              x-bind:selected="selectedConfig == config.id"
            ></option>
          </template>
        </select>
      </div>

      <div x-data="statusSelect()" class="form-group">
        <label for="status">Status</label>
        <select name="status" id="status" class="form-select" x-model="selectedStatus">
          <template x-for="status in statusArray" :key="status.key">
            <option
              :value="status.key"
              x-text="status.label"
              x-bind:selected="selectedStatus == status.key"
            ></option>
          </template>
        </select>
      </div>

      <hr class="mt-4 mb-3" />

      <h4>Vorberstellung</h4>

      <div x-data="preorderStatusSelect()" class="form-group">
        <label for="preorder-status">Status</label>
        <select name="preorder-status" id="preorder-status" class="form-select" x-model="selectedPreorderStatus">
          <template x-for="preorderStatus in preorderStatusArray" :key="preorderStatus.key">
            <option
              :value="preorderStatus.key"
              x-text="preorderStatus.label"
              x-bind:selected="selectedPreorderStatus == preorderStatus.key"
            ></option>
          </template>
        </select>
      </div>

      <div class="form-group">
        <label for="preorder-deadline">Deadline</label>
        <input
          type="datetime-local"
          id="preorder-deadline"
          class="form-control"
          name="preorder-deadline"
          value="{{ file.getPreorderDeadline() is not null ? file.getPreorderDeadline()|date('Y-m-d\\TH:i') : '' }}"
        />
      </div>

      <div class="form-group">
        <label for="preorder-delivery">Lieferung</label>
        <input
          type="date"
          id="preorder-delivery"
          class="form-control"
          name="preorder-delivery"
          value="{{ file.getPreorderDelivery() is not null ? file.getPreorderDelivery()|date('Y-m-d') : '' }}"
        />
      </div>

      <div x-data="preorderStateSelect()" class="form-group">
        <label for="preorder-state">State</label>
        <select name="preorder-state" id="preorder-state" class="form-select" x-model="selectedPreorderState">
          <template x-for="preorderState in preorderStateArray" :key="preorderState.key">
            <option
              :value="preorderState.key"
              x-text="preorderState.label"
              x-bind:selected="selectedPreorderState == preorderState.key"
            ></option>
          </template>
        </select>
      </div>

      <button type="submit" class="btn btn-primary">Speichern</button>
      <a href="/" class="btn btn-secondary">Abbrechen</a>
    </form>
  </div>
</section>
<script>
  function configSelect() {
    return {
      configs: [],
      selectedConfig: {{ file.getConfig().getId() | json_encode | raw }},
      async init() {
        try {
          const response = await fetch('/config-files/all');
          if (!response.ok) throw new Error("Ошибка загрузки конфигураций");
          this.configs = await response.json();
        } catch (error) {
          console.error(error);
        }
      }
    };
  }

  function statusSelect() {
    return {
      statusArray: [
        { key: 'idle', label: 'Kein Status' },
        { key: 'pending', label: 'Ausstehend' },
        { key: 'imported', label: 'Importiert' },
        { key: 'error', label: 'Fehler' }
      ],
      selectedStatus: {{ file.getStatus() | json_encode | raw }}
    };
  }

  function preorderStatusSelect() {
    return {
      preorderStatusArray: [
        { key: 0, label: 'Deaktiviert' },
        { key: 1, label: 'Aktiviert' },
      ],
      selectedPreorderStatus: {{ file.getPreorder() | json_encode | raw }}
    };
  }

  function preorderStateSelect() {
    return {
      preorderStateArray: [
        { key: 'open', label: 'Open' },
        { key: 'closed', label: 'Closed' },
        { key: 'sent_to_publisher', label: 'Sent to Publisher' },
        { key: 'awaiting_delivery', label: 'Awaiting Delivery' },
        { key: 'delivered', label: 'Delivered' },
      ],
      selectedPreorderState: {{ file.getPreorderState() | json_encode | raw }}
    };
  }
</script>
{% endblock %}
